
Функция ЗарегистрироватьВыгрузку()
	
	ЗаписатьXML = Новый ЗаписьXML;
	ЗаписатьXML.УстановитьСтроку();
	ЗаписьСообщения = Планыобмена.СоздатьЗаписьСообщения();
	Узел = ПланыОбмена.Мобильный.НайтиПоКоду("ЦБ");
	ЗаписьСообщения.НачатьЗапись(ЗаписатьXML,Узел);
	//проставляем номер отправленного сообщения
	Выборка = ПланыОбмена.ВыбратьИзменения(Узел,ЗаписьСообщения.НомерСообщения);
	Пока Выборка.Следующий() Цикл
		Объект = выборка.Получить();
		ЗаписатьXML(ЗаписатьXML,Объект); 
	КонецЦикла;
	ЗаписьСообщения.ЗакончитьЗапись();
	Возврат ЗаписатьXML.Закрыть();
	
КонецФункции  

Функция ВыполнитьСинхронизацию() Экспорт
	
	//пытаемся подключится, если нет, то обновляем адрес, логин и пароль
	Попытка		
		Попытка			
			ВСОпределение = Новый WSОпределения(Константы.АдресПодключения.Получить(),
			Константы.Логин.Получить(),
			Константы.Пароль.Получить(),,,);	
		Исключение
			ВыполнитьЗагрузкуСЯндэксДиска();
			ВСОпределение = Новый WSОпределения(Константы.АдресПодключения.Получить(),
			Константы.Логин.Получить(),
			Константы.Пароль.Получить(),,,);
		КонецПопытки;		
		ВССервис = ВсОпределение.Сервисы.Получить("DataTransfer","ОбмеДанными");
		ВСТочкаВхода = ВССервис.ТочкиПодключения.Получить("ОбмеДаннымиSoap");
		ВСОперация = ВСТочкаВхода.Интерфейс.Операции.Получить("Синхронизация"); 
		//отправляем данные
		Данные = Новый ХранилищеЗначения(ЗарегистрироватьВыгрузку(),Новый СжатиеДанных(9));
		ДанныеXDTO = ВСОпределение.ФабрикаXDTO.Создать(ВСОперация.Параметры.Получить("Данные").Тип,Данные);
		ВСПрокси = Новый WSПрокси(ВСОпределение,"DataTransfer","ОбмеДанными","ОбмеДаннымиSoap",); 
		ВСПрокси.Пользователь = Константы.Логин.Получить();
		ВСПрокси.Пароль = Константы.Пароль.Получить();
		Ответ = ВСПрокси.Синхронизация(ДанныеXDTO);
		//получаем данные
		ПринятьИзмененияПоПлану(Ответ.Получить());
		Возврат Истина;				
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Процедура ПринятьИзмененияПоПлану(СтрокаСообщения) Экспорт
	
	ЧтениеXML = Новый ЧтениеXML;	
	ЧтениеXML.УстановитьСтроку(СтрокаСообщения);
	ЧтениеСообщения = Планыобмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(ЧтениеXML); 
	Отправитель = ЧтениеСообщения.Отправитель;
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
		Данные = ПрочитатьXML(ЧтениеСообщения.ЧтениеXML);
		Если Не Данные = Неопределено Тогда
			//Данные.ОбменДанными.Отправитьель = Отправитель;
			Данные.ОбменДанными.Загрузка = Истина;
			Если ТипЗнч(Данные) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
				Если Данные.Проведен Тогда
					Данные.Записать(); 
					П = Новый Массив;
					П.Добавить(Данные.Ссылка);
					ФоновыеЗадания.Выполнить("Получениеданных.ОтложеноеПроведениеДокумента",П); 
				КонецЕсли;
				Данные.Записать();
			Иначе
				Данные.Записать();	
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	//удаляем номера полученные
	Планыобмена.УдалитьРегистрациюИзменений(Отправитель,Отправитель.НомерПринятого);
	ЧтениеСообщения.ЗакончитьЧтение();
	
КонецПроцедуры 

Процедура РегистрацияПриЗаписи(Источник, Отказ) Экспорт  
	
	Если не Источник.Обменданными.Загрузка и Не Источник.ДополнительныеСвойства.Свойство("Загрузка") Тогда	
		Планыобмена.ЗарегистрироватьИзменения(ПланЫОбмена.Мобильный.НайтиПоКоду("ЦБ"),Источник.Ссылка);			
	КонецЕсли; 
	ФоновыеЗадания.Выполнить("Получениеданных.ВыполнитьСинхронизацию");
	
КонецПроцедуры 

Процедура ОтложеноеПроведениеДокумента(Ссылка) Экспорт
	
	Данные = Ссылка.ПолучитьОбъект();
	Данные.ДополнительныеСвойства.Вставить("Загрузка",Истина);
	Данные.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуСЯндэксДиска() Экспорт
		
		SSL = Новый ЗащищенноеСоединениеOpenSSL();
		Яндекс = Новый HTTPСоединение("cloud-api.yandex.net",,,,,,SSL);
		КаталогСохранения = ПолучитьИмяВременногоФайла("txt");;
		HTTPЗапрос = Новый HTTPЗапрос("/v1/disk/public/resources?public_key=https://disk.yandex.ru/d/RpT6475goQ");  //RpT6475goQ - это адрес файла
		Ответ = Яндекс.Получить(HTTPЗапрос);
		Если Ответ.КодСостояния = 200 тогда
			ЧтениеJSON = Новый ЧтениеJSON;
			ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку());
			СсылкаНаСкачиваниеФайла = ПрочитатьJSON(ЧтениеJSON);
			Если ЗначениеЗаполнено(СсылкаНаСкачиваниеФайла.file) тогда
				Соединение = Новый HTTPСоединение(СтрЗаменить(СсылкаНаСкачиваниеФайла.file,"https://",""),,,,,,Новый ЗащищенноеСоединениеOpenSSL()); 
				Запрос = Новый HTTPЗапрос("");
				Результат = Соединение.Получить(Запрос);
				Если Результат.КодСостояния = 302 Тогда               
					КопироватьФайл(Результат.Заголовки.Получить("Location"),КаталогСохранения); 
				ИначеЕсли Результат.КодСостояния = 200 Тогда
					ДД = Результат.ПолучитьДвоичныеДанные();
					ДД.Записать(КаталогСохранения);
				КонецЕсли;
			КонецЕсли;
			Текст = Новый ЧтениеТекста;
			Текст.Открыть(КаталогСохранения);              
			Строка = Текст.ПрочитатьСтроку();
			Пока Строка <> Неопределено Цикл 
				Если СтрНайти(Строка,"Adres:") Тогда
					Константы.АдресПодключения.Установить(Сред(Строка,7));
				ИначеЕсли СтрНайти(Строка,"Login:") Тогда
					Константы.Логин.Установить(Сред(Строка,7));
				ИначеЕсли СтрНайти(Строка,"Parol:") Тогда
					Константы.Пароль.Установить(Сред(Строка,8));
				КонецЕсли;
				Строка = Текст.ПрочитатьСтроку();             
			КонецЦикла;
			Попытка
			    УдалитьФайлы(КаталогСохранения);
			Исключение			
			КонецПопытки;
		КонецЕсли;	
		
КонецПроцедуры

